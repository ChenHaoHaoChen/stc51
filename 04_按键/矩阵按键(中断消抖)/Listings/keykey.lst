C51 COMPILER V9.59.0.0   KEYKEY                                                            08/21/2021 10:19:41 PAGE 1   


C51 COMPILER V9.59.0.0, COMPILATION OF MODULE KEYKEY
OBJECT MODULE PLACED IN .\Objects\keykey.obj
COMPILER INVOKED BY: D:\Keil5\C51\BIN\C51.EXE keykey.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\keyk
                    -ey.lst) TABS(2) OBJECT(.\Objects\keykey.obj)

line level    source

   1          #include <reg52.h>
   2          sbit ADDR0 = P1^0;
   3          sbit ADDR1 = P1^1;
   4          sbit ADDR2 = P1^2;
   5          sbit ADDR3 = P1^3;
   6          sbit ENLED = P1^4;
   7          sbit KEYOUT4 = P2^0;
   8          sbit KEYOUT3 = P2^1;
   9          sbit KEYOUT2 = P2^2;
  10          sbit KEYOUT1 = P2^3;
  11          sbit KEYIN1 = P2^4;
  12          sbit KEYIN2 = P2^5;
  13          sbit KEYIN3 = P2^6;
  14          sbit KEYIN4 = P2^7;
  15          unsigned char code number[]={               //数码管显示数组：0-F
  16              0xc0,0xf9,0xa4,0xb0,0x99,0x92,0x82,0xf8, 
  17              0x80,0x90,0x88,0x83,0xc6,0xa1,0x86,0x8e 
  18            };
  19          unsigned char keyfinally[4][4]={            //消抖之后，按键的最终值
  20            {1,1,1,1},{1,1,1,1},{1,1,1,1},{1,1,1,1}
  21            };
  22          void main()
  23          {
  24   1        unsigned char i,j;                        //双重循环变量
  25   1        unsigned char backup[4][4]={              //按键上一个状态的值
  26   1          {1,1,1,1},{1,1,1,1},{1,1,1,1},{1,1,1,1}
  27   1        };
  28   1        ENLED = 0;                                //打开74138译码器
  29   1        ADDR3 = 1;
  30   1        ADDR2 = 0;
  31   1        ADDR1 = 0;
  32   1        ADDR0 = 0;
  33   1        TMOD = 0x01;                              //设置定时器以1模式
  34   1        TH0 = 0xfc;                               //定时1ms
  35   1        TL0 = 0x66;
  36   1        TR0 = 1;                                  //打开定时器
  37   1        EA = 1;                                   //打开定时器TO中断
  38   1        ET0 = 1;
  39   1        P0 = number[0];                           //默认显示number[0],即：数码管显示0
  40   1        while(1)
  41   1        {
  42   2          for(i=0;i<4;i++)
  43   2          {
  44   3            for(j=0;j<4;j++)
  45   3            {
  46   4              if(keyfinally[i][j] != backup[i][j])//按键终值与上一个状态值不同时进入判断
  47   4              {
  48   5                if(backup[i][j] == 0)             //按键弹起时执行动作
  49   5                {
  50   6                  P0 = number[i*4+j];             //数码管显示
  51   6                }
  52   5                backup[i][j] = keyfinally[i][j];  //更新上一个状态值
  53   5              }
  54   4            }
C51 COMPILER V9.59.0.0   KEYKEY                                                            08/21/2021 10:19:41 PAGE 2   

  55   3          }
  56   2        }
  57   1      }
  58          void interrupttime0() interrupt 1
  59          {
  60   1        static unsigned char keybuffer[4][4]={    //矩阵按键扫描输出缓冲，默认为0xff，即1111 1111
  61   1          {0xff,0xff,0xff,0xff},{0xff,0xff,0xff,0xff},
  62   1          {0xff,0xff,0xff,0xff},{0xff,0xff,0xff,0xff}
  63   1        };
  64   1        static unsigned char keyout = 0;         //矩阵按键扫描输出索引
  65   1        static unsigned char i;
  66   1        TH0 = 0xfc;                              //定时器从新定时1ms
  67   1        TL0 = 0x66;
  68   1        keybuffer[keyout][0] = (keybuffer[keyout][0] << 1) | KEYIN1;
  69   1        keybuffer[keyout][1] = (keybuffer[keyout][1] << 1) | KEYIN2;
  70   1        keybuffer[keyout][2] = (keybuffer[keyout][2] << 1) | KEYIN3;
  71   1        keybuffer[keyout][3] = (keybuffer[keyout][3] << 1) | KEYIN4;
  72   1        for(i=0;i<4;i++)
  73   1        {
  74   2          if((keybuffer[keyout][i]&0x0f) == 0x00)//当出现连续四位0时，认定按键按下
  75   2          {
  76   3            keyfinally[keyout][i] = 0;
  77   3          }
  78   2          else if((keybuffer[keyout][i]&0x0f) == 0x0f)//当出现连续四位1时，认定按键弹起
  79   2          {
  80   3            keyfinally[keyout][i] = 1;       
  81   3          }
  82   2          else
  83   2          {}
  84   2        }
  85   1        keyout++;
  86   1        if(keyout == 4)
  87   1        {
  88   2          keyout = 0;
  89   2        }
  90   1        switch(keyout)
  91   1        {
  92   2          case 0:KEYOUT4 = 1;KEYOUT3 = 1;KEYOUT2 = 1;KEYOUT1 = 0;break;
  93   2          case 1:KEYOUT4 = 1;KEYOUT3 = 1;KEYOUT2 = 0;KEYOUT1 = 1;break;
  94   2          case 2:KEYOUT4 = 1;KEYOUT3 = 0;KEYOUT2 = 1;KEYOUT1 = 1;break;
  95   2          case 3:KEYOUT4 = 0;KEYOUT3 = 1;KEYOUT2 = 1;KEYOUT1 = 1;break;
  96   2        }
  97   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    429    ----
   CONSTANT SIZE    =     32    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     34      16
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
