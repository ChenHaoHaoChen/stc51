C51 COMPILER V9.59.0.0   MAIN                                                              09/02/2021 09:53:09 PAGE 1   


C51 COMPILER V9.59.0.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\Objects\main.obj
COMPILER INVOKED BY: D:\Keil5\C51\BIN\C51.EXE main.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\main.l
                    -st) TABS(2) OBJECT(.\Objects\main.obj)

line level    source

   1          #include <reg52.h>
   2          bit flag300ms = 0;         //300ms刷新标志位
   3          unsigned char TH0R;        //定时器重载值高四位
   4          unsigned char TL0R;        //定时器重载值低四位
   5          
   6          extern void LCD1602init(); //外部函数声明
   7          extern void LCD1602show(unsigned char x,unsigned char y,unsigned char *str);
   8          extern void I2Cstart();
   9          extern unsigned char I2Cwrite(unsigned char dat);
  10          extern unsigned char I2CreadACK();
  11          extern unsigned char I2CreadNACK();
  12          extern void I2Cstop();
  13          
  14          void configtime0(unsigned char ms);
  15          unsigned char getadcval(unsigned char channel);
  16          void valtostring(unsigned char val,unsigned char *str);
  17          
  18          void main()
  19          {
  20   1        unsigned char val;     
  21   1        unsigned char str[16];
  22   1        EA = 1;           //打开总中断
  23   1        configtime0(10);  //定时器T0定时10ms
  24   1        LCD1602init();    //LCD1602初始化
  25   1        LCD1602show(0,0,"Val0 Val1 Val3");
  26   1        while(1)
  27   1        {
  28   2          if(flag300ms)
  29   2          {
  30   3            flag300ms = 0;
  31   3            val = getadcval(0);   //获取电压值刻度，例：val = 5，电压 = （val*基准电压2.5）/（8位，刻度=2^8-1=255）
  32   3            valtostring(val,str); //将获取电压刻度转换为电压值保存位字符串数组中
  33   3            LCD1602show(0,1,str);
  34   3            
  35   3            val = getadcval(1);
  36   3            valtostring(val,str);
  37   3            LCD1602show(5,1,str);
  38   3            
  39   3            val = getadcval(3);
  40   3            valtostring(val,str);
  41   3            LCD1602show(10,1,str);
  42   3          }
  43   2        }
  44   1      }
  45          /*获取电压刻度函数*/
  46          unsigned char getadcval(unsigned char channel)
  47          {
  48   1        unsigned char val;
  49   1        I2Cstart();              //I2C起始信号
  50   1        I2Cwrite(0X90);          //写入I2C器件地址，并选择写使能
  51   1        I2Cwrite(0X40 | channel);//写入D/A数据寄存器地址，并选择channel（0-3）端
  52   1        I2Cstart();              //重新发送I2C起始信号
  53   1        I2Cwrite(0X91);          //写入I2C器件地址，并选择读使能
  54   1        I2CreadACK();            //先读一个空字节，提供采样转换时间
C51 COMPILER V9.59.0.0   MAIN                                                              09/02/2021 09:53:09 PAGE 2   

  55   1        val = I2CreadNACK();     
  56   1        I2Cstop();               //I2C停止信号
  57   1        return val;
  58   1      }
  59          /*电压转字符串函数*/
  60          void valtostring(unsigned char val,unsigned char *str)
  61          {
  62   1        val = (val*25)/255;
  63   1        str[0] = (val/10) + '0';
  64   1        str[1] = '.';
  65   1        str[2] = (val%10) + '0';
  66   1        str[3] = 'V';
  67   1        str[4] = '\0';
  68   1      }
  69          /*配置定时器T0函数*/
  70          void configtime0(unsigned char ms)
  71          {
  72   1        unsigned long tmp;
  73   1        tmp = 11059200/12;
  74   1        tmp = (tmp*ms)/1000;
  75   1        tmp = 65536 - tmp;
  76   1        TH0R = (unsigned char)(tmp >> 8);
  77   1        TL0R = (unsigned char)(tmp);
  78   1        TMOD = TMOD & 0XF0;
  79   1        TMOD = TMOD | 0X01;
  80   1        TH0 = TH0R;
  81   1        TL0 = TL0R;
  82   1        TR0 = 1;
  83   1        ET0 = 1;
  84   1      }
  85          /*定时器T0中断，每10ms进入一次*/
  86          void interrupttimme0() interrupt 1
  87          {
  88   1        static unsigned char cnt = 0;
  89   1        TH0 = TH0R;
  90   1        TL0 = TL0R;
  91   1        cnt++;
  92   1        if(cnt >= 30)    //每定时到300ms，300ms标志位flag300ms位置1
  93   1        {
  94   2          cnt = 0;
  95   2          flag300ms = 1;
  96   2        }
  97   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    349    ----
   CONSTANT SIZE    =     15    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      3      26
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      1    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
