C51 COMPILER V9.59.0.0   MAIN                                                              08/17/2021 11:43:02 PAGE 1   


C51 COMPILER V9.59.0.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\Objects\main.obj
COMPILER INVOKED BY: D:\Keil5\C51\BIN\C51.EXE main.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\main.l
                    -st) TABS(2) OBJECT(.\Objects\main.obj)

line level    source

   1          #include <reg52.h>
   2          #define LCD1602_DB P0      //宏定义总线，切记不加分号
   3          sbit LCD1602_RS = P1^0;    //数据/命令选择端（1/0） 
   4          sbit LCD1602_RW = P1^1;    //读/写选择段（1/0）
   5          sbit LCD1602_E = P1^5;     //LCD1602使能端（高电平有效）
   6          
   7          void LCD1602init();        //函数声明
   8          void LCD1602writecmd(unsigned char cmd);
   9          void LCD1602readstate();
  10          void LCD1602show(unsigned char x,unsigned char y,unsigned char *p);
  11          void LCD1602setcoor(unsigned char x,unsigned char y);
  12          void LCD1602writedate(unsigned char str);
  13          
  14          void main()
  15          {
  16   1        unsigned char str1[]={ //第一行需要显示的字符串1，共10个字符
  17   1          "Chen Hao Hao"
  18   1        };
  19   1        unsigned char str2[]={ //第二行需要显示的字符串1，共9个字符
  20   1          "2021/8/17"
  21   1        };
  22   1        LCD1602init();
  23   1        LCD1602show(2,0,str1);
  24   1        LCD1602show(2,1,str2);
  25   1        while(1);
  26   1      }
  27          /*LCD1602初始化函数*/
  28          void LCD1602init()
  29          {
  30   1        LCD1602writecmd(0X38); //显示模式设置
  31   1        LCD1602writecmd(0X0C); //显示开关设置
  32   1        LCD1602writecmd(0X06); //显示光标设置
  33   1        LCD1602writecmd(0X01); //显示清屏
  34   1      }
  35          /*LCD1602写指令函数*/
  36          void LCD1602writecmd(unsigned char cmd)
  37          {
  38   1        LCD1602readstate();    //写指令之前需要读状态，确保STA7=0
  39   1        LCD1602_RS = 0;
  40   1        LCD1602_RW = 0;
  41   1        LCD1602_DB = cmd;
  42   1        LCD1602_E = 0;         //由于写指令只有在使能端有高脉冲时，才启动，这里软件设置高脉冲
  43   1        LCD1602_E = 1;
  44   1        LCD1602_E = 0;
  45   1      }
  46          /*LCD1602读状态函数*/
  47          void LCD1602readstate()  //用于检测STA7（DB7）是否处于高电平
  48          {
  49   1        unsigned char sta7;
  50   1        LCD1602_RS = 0;
  51   1        LCD1602_RW = 1;
  52   1        do
  53   1        {
  54   2          LCD1602_E = 1;
C51 COMPILER V9.59.0.0   MAIN                                                              08/17/2021 11:43:02 PAGE 2   

  55   2          sta7 = LCD1602_DB;
  56   2          LCD1602_E = 0;
  57   2        }
  58   1        while(sta7 & 0X80);    //当STA7最高位等于0时，可以进行下一步
  59   1      }
  60          /*LCD1602显示函数*/
  61          void LCD1602show(unsigned char x,unsigned char y,unsigned char *p)
  62          {
  63   1        LCD1602setcoor(x,y);
  64   1        while(*p != '\0')
  65   1        {
  66   2          LCD1602writedate(*p++); //*p++：先*p再p++
  67   2        }
  68   1      }
  69          /*LCD1602坐标定位函数*/
  70          void LCD1602setcoor(unsigned char x,unsigned char y)
  71          {
  72   1        unsigned char add;
  73   1        if(y == 0)
  74   1        {
  75   2          add = 0X00 + x;
  76   2        }
  77   1        else
  78   1        {
  79   2          add = 0X40 + x;
  80   2        }
  81   1        LCD1602writecmd(add | 0X80);//设置数据指针地址：0X80+地址码
  82   1      }
  83          /*LCD1602写数据函数*/
  84          void LCD1602writedate(unsigned char str)
  85          {
  86   1        LCD1602readstate();         //写数据之间需要读状态，即检测STA7是否为0
  87   1        LCD1602_RS = 1;
  88   1        LCD1602_RW = 0;
  89   1        LCD1602_DB = str;
  90   1        LCD1602_E = 0;              //写数据使能端高脉冲触发，这里用软件设置一个高脉冲
  91   1        LCD1602_E = 1;
  92   1        LCD1602_E = 0;
  93   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    201    ----
   CONSTANT SIZE    =     23    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----      28
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
