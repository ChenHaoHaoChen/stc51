C51 COMPILER V9.59.0.0   MAIN                                                              08/27/2021 21:15:49 PAGE 1   


C51 COMPILER V9.59.0.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\Objects\main.obj
COMPILER INVOKED BY: D:\Keil5\C51\BIN\C51.EXE main.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\main.l
                    -st) TABS(2) OBJECT(.\Objects\main.obj)

line level    source

   1          #include <reg52.h>
   2          sbit DS1302_CE = P1^7;
   3          sbit DS1302_SCK = P3^5;
   4          sbit DS1302_SIO = P3^4;
   5          unsigned char TH0R;          //定时器T0重载值
   6          unsigned char TL0R;
   7          unsigned char flag200ms = 0; //200ms定时标志
   8          
   9          extern void LCD1602init();   //外部函数声明
  10          extern void LCD1602show(unsigned char x,unsigned char y,unsigned char *str);
  11          void DS1302init();           //函数声明
  12          void configtime0(unsigned char ms);
  13          unsigned char DS1302singleread(unsigned char addsn);
  14          
  15          void main()
  16          {
  17   1        unsigned char i; 
  18   1        unsigned char sec = 0XAA;  //秒位刷新比较
  19   1        unsigned char time[7];     //存放DS1302内部时间
  20   1        unsigned char str1[12];    //显示字符串1
  21   1        unsigned char str2[12];    //显示字符串2
  22   1        EA = 1;                    //打开总中断
  23   1        configtime0(1);            //定时1ms
  24   1        DS1302init();              //DS1302初始化
  25   1        LCD1602init();             //LCD1602初始化
  26   1        while(1)
  27   1        {
  28   2          if(flag200ms == 1)
  29   2          {
  30   3            flag200ms = 0;
  31   3            for(i=0;i<7;i++)
  32   3            {
  33   4              time[i] = DS1302singleread(i);
  34   4            }
  35   3            if(sec != time[0])
  36   3            {
  37   4              str1[0] = '2';
  38   4              str1[1] = '0';
  39   4              str1[2] = (time[6] >> 4) + '0';  //年十位转化为字符
  40   4              str1[3] = (time[6] & 0X0F) + '0';//年个位转化为字符
  41   4              str1[4] = '-';
  42   4              str1[5] = (time[4] >> 4) + '0';  //月十位转化为字符
  43   4              str1[6] = (time[4] & 0X0F) + '0';//月个位转化为字符
  44   4              str1[7] = '-';
  45   4              str1[8] = (time[3] >> 4) + '0';  //日十位转化为字符
  46   4              str1[9] = (time[3] & 0X0F) + '0';//日个位转化为字符
  47   4              str1[10] = '\0';
  48   4              LCD1602show(3,0,str1);
  49   4              
  50   4              str2[0] = (time[2] >> 4) + '0';  //时十位转化为字符
  51   4              str2[1] = (time[2] & 0X0F) + '0';//时个位转化为字符
  52   4              str2[2] = ':';
  53   4              str2[3] = (time[1] >> 4) + '0';  //分十位转化为字符
  54   4              str2[4] = (time[1] & 0X0F) + '0';//分个位转化为字符
C51 COMPILER V9.59.0.0   MAIN                                                              08/27/2021 21:15:49 PAGE 2   

  55   4              str2[5] = ':';
  56   4              str2[6] = (time[0] >> 4) + '0';  //秒十位转化为字符
  57   4              str2[7] = (time[0] & 0X0F) + '0';//秒个位转化为字符
  58   4              str2[8] = '\0';
  59   4              LCD1602show(4,1,str2);
  60   4              
  61   4              sec = time[0];                   //将当前秒值赋值给sec以便下次比较秒值
  62   4            }
  63   3          }
  64   2        }
  65   1      }
  66          /*DS1302单字节读函数*/
  67          unsigned char DS1302readbyte()
  68          {
  69   1        unsigned char dat = 0;
  70   1        unsigned char mask;
  71   1        for(mask=0X01;mask!=0;mask=mask<<1)
  72   1        {
  73   2          if(DS1302_SIO != 0)       //先读取SIO值，再拉高拉低时钟
  74   2          {
  75   3            dat = dat | mask;
  76   3          }
  77   2          DS1302_SCK = 0;
  78   2          DS1302_SCK = 1;
  79   2          DS1302_SCK = 0;
  80   2        }
  81   1        return dat;
  82   1      }
  83          /*DS1302单字节写函数*/
  84          void DS1302writebyte(unsigned char dat)
  85          {
  86   1        unsigned char mask;
  87   1        for(mask=0X01;mask!=0;mask=mask<<1)
  88   1        {
  89   2          if((mask & dat) != 0)     
  90   2          {
  91   3            DS1302_SIO = 1;         //先准备好SIO数据，再拉高拉低时钟
  92   3          }
  93   2          else
  94   2          {
  95   3            DS1302_SIO = 0;
  96   3          }
  97   2          DS1302_SCK = 0;
  98   2          DS1302_SCK = 1;
  99   2          DS1302_SCK = 0;
 100   2        }
 101   1      }
 102          /*DS1302单独读函数*/
 103          unsigned char DS1302singleread(unsigned char addsn)
 104          {
 105   1        unsigned char dat;
 106   1        DS1302_CE = 1;
 107   1        DS1302writebyte((addsn<<1) | 0X81);
 108   1        dat = DS1302readbyte();
 109   1        DS1302_CE = 0;
 110   1        return dat;
 111   1      }
 112          /*DS1302单独写函数*/
 113          void DS1302singlewrite(unsigned char addsn,unsigned char dat)
 114          {
 115   1        DS1302_CE = 1;
 116   1        DS1302writebyte((addsn<<1) | 0X80);
C51 COMPILER V9.59.0.0   MAIN                                                              08/27/2021 21:15:49 PAGE 3   

 117   1        DS1302writebyte(dat);
 118   1        DS1302_CE = 0;
 119   1      }
 120          /*DS1302初始化函数*/
 121          void DS1302init()
 122          {
 123   1        unsigned char i; 
 124   1        unsigned char code date[7]={
 125   1          0X00,0X17,0X21,0X27,0X08,0X05,0X21
 126   1        };
 127   1        DS1302_CE = 0;            
 128   1        DS1302_SCK = 0;
 129   1        DS1302singlewrite(7,0X00);
 130   1        for(i=0;i<7;i++)
 131   1        {
 132   2          DS1302singlewrite(i,date[i]);
 133   2        }
 134   1      }
 135          /*T0定时器定时1ms配置函数*/
 136          void configtime0(unsigned char ms)
 137          {
 138   1        unsigned long temp;
 139   1        temp = 11059200/12;
 140   1        temp = (temp*ms)/1000;
 141   1        temp = 65536 - temp;
 142   1        TH0R = (unsigned char)(temp >> 8);
 143   1        TL0R = (unsigned char)(temp);
 144   1        TMOD = TMOD & 0XF0;
 145   1        TMOD = TMOD | 0X01;
 146   1        TH0 = TH0R;
 147   1        TL0 = TL0R;
 148   1        TR0 = 1;
 149   1        ET0 = 1;
 150   1      }
 151          /*中断函数，每1ms进入一次*/
 152          void interrupttime0() interrupt 1
 153          {
 154   1        static unsigned char cnt = 0;
 155   1        TH0 = TH0R;
 156   1        TL0 = TL0R;
 157   1        cnt++;
 158   1        if(cnt == 200)
 159   1        {
 160   2          cnt = 0;
 161   2          flag200ms = 1;
 162   2        }
 163   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    465    ----
   CONSTANT SIZE    =      7    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      4      37
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
