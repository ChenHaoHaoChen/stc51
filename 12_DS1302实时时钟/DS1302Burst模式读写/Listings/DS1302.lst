C51 COMPILER V9.59.0.0   DS1302                                                            08/28/2021 11:13:18 PAGE 1   


C51 COMPILER V9.59.0.0, COMPILATION OF MODULE DS1302
OBJECT MODULE PLACED IN .\Objects\DS1302.obj
COMPILER INVOKED BY: D:\Keil5\C51\BIN\C51.EXE DS1302.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\DS13
                    -02.lst) TABS(2) OBJECT(.\Objects\DS1302.obj)

line level    source

   1          /*********************
   2          DS1302配置函数
   3          *********************/
   4          #include <reg52.h>
   5          sbit DS1302_CE = P1^7;
   6          sbit DS1302_SCK = P3^5;
   7          sbit DS1302_SIO = P3^4;
   8          unsigned char code date[7]={           //设置时间 2020-8-27 11：00：00
   9              0X00,0X14,0X11,0X28,0X08,0X06,0X21
  10            };
  11          /*DS1302写字节函数*/
  12          void DS1302writebyte(unsigned char dat)
  13          {
  14   1        unsigned char mask;
  15   1        for(mask=0X01;mask!=0;mask=mask<<1)
  16   1        {
  17   2          if((mask&dat) != 0) //先准备好SIO口数据，再拉高拉低时钟SCK口
  18   2          {
  19   3            DS1302_SIO = 1;      
  20   3          }
  21   2          else
  22   2          {
  23   3            DS1302_SIO = 0;
  24   3          }
  25   2          DS1302_SCK = 0;
  26   2          DS1302_SCK = 1;
  27   2          DS1302_SCK = 0;
  28   2        }
  29   1      }
  30          /*DS1302写字节函数*/
  31          unsigned char DS1302readbyte()
  32          {
  33   1        unsigned char dat = 0;
  34   1        unsigned char mask;
  35   1        for(mask=0X01;mask!=0;mask=mask<<1)
  36   1        {
  37   2          if(DS1302_SIO != 0)
  38   2          {
  39   3            dat = dat | mask;//先读取SIO值，再拉高拉低时钟SCK口
  40   3          }
  41   2          DS1302_SCK = 0;
  42   2          DS1302_SCK = 1;
  43   2          DS1302_SCK = 0;
  44   2        }
  45   1        return dat;
  46   1      }
  47          /*DS1302 单读 写函数*/
  48          void DS1302singlewrite(unsigned char addsn,unsigned char dat)
  49          {
  50   1        DS1302_CE = 1;         //打开使能端
  51   1        DS1302writebyte((addsn<<1) | 0X80);//写入地址
  52   1        DS1302writebyte(dat);  //写入数据
  53   1        DS1302_CE = 0;         //关闭使能端
  54   1      }
C51 COMPILER V9.59.0.0   DS1302                                                            08/28/2021 11:13:18 PAGE 2   

  55          /*DS1302 单独 读函数*/
  56          unsigned char DS1302singleread(unsigned char addsn)
  57          {
  58   1        unsigned char dat;
  59   1        DS1302_CE = 1;         //打开使能端
  60   1        DS1302writebyte((addsn<<1) | 0X81);//写入地址
  61   1        dat = DS1302readbyte();//读取数据
  62   1        DS1302_CE = 0;         //关闭使能端
  63   1        return dat;
  64   1      }
  65          /*DS1302burst模式写函数*/
  66          void DS1302burstwrite(unsigned char *p)
  67          {
  68   1        unsigned char i;
  69   1        DS1302_CE = 1;
  70   1        DS1302writebyte(0XBE);
  71   1        for(i=0;i<8;i++)      //burst模式一次可以写八个寄存器
  72   1        {
  73   2          DS1302writebyte(p[i]);
  74   2        }
  75   1        DS1302_CE = 0;
  76   1      }
  77          /*DS1302burst模式读函数*/
  78          void DS1302burstread(unsigned char *p)
  79          {
  80   1        unsigned char i;
  81   1        DS1302_CE = 1;
  82   1        DS1302writebyte(0XBF);
  83   1        for(i=0;i<8;i++)      //burst模式一次可以读八个寄存器
  84   1        {
  85   2          p[i] = DS1302readbyte();
  86   2        }
  87   1        DS1302_CE = 0;
  88   1      }
  89          /*DS1302初始化函数*/
  90          void DS1302init()
  91          {
  92   1        DS1302_CE = 0;       //51MCU默认输出高电平，由软件拉低使能端（CE）和时钟端（SCK）电平
  93   1        DS1302_SCK = 0;
  94   1        DS1302singlewrite(7,0X00);//写保护位值0，即允许写数据
  95   1        DS1302burstwrite(date);//采用burst模式写入设置好的时间
  96   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    206    ----
   CONSTANT SIZE    =      7    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----       6
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
